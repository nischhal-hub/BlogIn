{
  "version": 3,
  "sources": ["../../use-ssr/dist/useSSR.js", "../../react-useportal/usePortal.ts"],
  "sourcesContent": ["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Device;\n(function (Device) {\n    Device[\"Browser\"] = \"browser\";\n    Device[\"Server\"] = \"server\";\n    Device[\"Native\"] = \"native\";\n})(Device = exports.Device || (exports.Device = {}));\nvar Browser = Device.Browser, Server = Device.Server, Native = Device.Native;\nvar canUseDOM = !!(typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement);\nvar canUseNative = typeof navigator != 'undefined' && navigator.product == 'ReactNative';\nvar device = canUseNative ? Native : canUseDOM ? Browser : Server;\nvar SSRObject = {\n    isBrowser: device === Browser,\n    isServer: device === Server,\n    isNative: device === Native,\n    device: device,\n    canUseWorkers: typeof Worker !== 'undefined',\n    canUseEventListeners: device === Browser && !!window.addEventListener,\n    canUseViewport: device === Browser && !!window.screen,\n};\n// TODO: instead of this, do a polyfill for `Object.assign` https://www.npmjs.com/package/es6-object-assign\nvar assign = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.reduce(function (acc, obj) { return (__assign(__assign({}, acc), obj)); }, {});\n};\nvar values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\nvar toArrayObject = function () { return assign((values(SSRObject), SSRObject)); };\nvar useSSRObject = toArrayObject();\nexports.weAreServer = function () {\n    SSRObject.isServer = true;\n    useSSRObject = toArrayObject();\n};\nexports.useSSR = function () { return useSSRObject; };\nexports.default = exports.useSSR;\n", "import { useState, useRef, useEffect, useCallback, useMemo, ReactNode, DOMAttributes, SyntheticEvent, MutableRefObject, MouseEvent } from 'react'\nimport { createPortal, findDOMNode } from 'react-dom'\nimport useSSR from 'use-ssr'\n\ntype HTMLElRef = MutableRefObject<HTMLElement>\ntype CustomEvent = {\n  event?: SyntheticEvent<any, Event>\n  portal: HTMLElRef\n  targetEl: HTMLElRef\n} & SyntheticEvent<any, Event>\n\ntype CustomEventHandler = (customEvent: CustomEvent) => void\ntype CustomEventHandlers = {\n  [K in keyof DOMAttributes<K>]?: CustomEventHandler\n}\n\ntype EventListenerMap = { [K in keyof DOMAttributes<K>]: keyof GlobalEventHandlersEventMap }\ntype EventListenersRef = MutableRefObject<{\n  [K in keyof DOMAttributes<K>]?: (event: SyntheticEvent<any, Event>) => void\n}>\n\nexport type UsePortalOptions = {\n  closeOnOutsideClick?: boolean\n  closeOnEsc?: boolean\n  bindTo?: HTMLElement // attach the portal to this node in the DOM\n  isOpen?: boolean\n  onOpen?: CustomEventHandler\n  onClose?: CustomEventHandler\n  onPortalClick?: CustomEventHandler\n  programmaticallyOpen?: boolean\n} & CustomEventHandlers\n\ntype UsePortalObjectReturn = {} // TODO\ntype UsePortalArrayReturn = [] // TODO\n\nexport const errorMessage1 = 'You must either add a `ref` to the element you are interacting with or pass an `event` to openPortal(e) or togglePortal(e) when the `programmaticallyOpen` option is not set to `true`.'\n\nexport default function usePortal({\n  closeOnOutsideClick = true,\n  closeOnEsc = true,\n  bindTo, // attach the portal to this node in the DOM\n  isOpen: defaultIsOpen = false,\n  onOpen,\n  onClose,\n  onPortalClick,\n  programmaticallyOpen = false,\n  ...eventHandlers\n}: UsePortalOptions = {}): any {\n  const { isServer, isBrowser } = useSSR()\n  const [isOpen, makeOpen] = useState(defaultIsOpen)\n  // we use this ref because `isOpen` is stale for handleOutsideMouseClick\n  const open = useRef(isOpen)\n\n  const setOpen = useCallback((v: boolean) => {\n    // workaround to not have stale `isOpen` in the handleOutsideMouseClick\n    open.current = v\n    makeOpen(v)\n  }, [])\n\n  const targetEl = useRef() as HTMLElRef // this is the element you are clicking/hovering/whatever, to trigger opening the portal\n  const portal = useRef(isBrowser ? document.createElement('div') : null) as HTMLElRef\n\n  useEffect(() => {\n    if (isBrowser && !portal.current) portal.current = document.createElement('div')\n  }, [isBrowser, portal])\n\n  const elToMountTo = useMemo(() => {\n    if (isServer) return\n    return (bindTo && findDOMNode(bindTo)) || document.body\n  }, [isServer, bindTo])\n\n  const createCustomEvent = (e: any) => {\n    if (!e) return { portal, targetEl, event: e }\n    const event = e || {}\n    if (event.persist) event.persist()\n    event.portal = portal\n    event.targetEl = targetEl\n    event.event = e\n    const { currentTarget } = e\n    if (!targetEl.current && currentTarget && currentTarget !== document) targetEl.current = event.currentTarget\n    return event\n  }\n\n  // this should handle all eventHandlers like onClick, onMouseOver, etc. passed into the config\n  const customEventHandlers: CustomEventHandlers = Object\n    .entries(eventHandlers)\n    .reduce<any>((acc, [handlerName, eventHandler]) => {\n      acc[handlerName] = (event?: SyntheticEvent<any, Event>) => {\n        if (isServer) return\n        eventHandler(createCustomEvent(event))\n      }\n      return acc\n    }, {})\n\n  const openPortal = useCallback((e: any) => {\n    if (isServer) return\n    const customEvent = createCustomEvent(e)\n    // for some reason, when we don't have the event argument, there\n    // is a weird race condition. Would like to see if we can remove\n    // setTimeout, but for now this works\n    if (targetEl.current == null && !programmaticallyOpen) {\n      setTimeout(() => setOpen(true), 0)\n      throw Error(errorMessage1)\n    }\n    if (onOpen) onOpen(customEvent)\n    setOpen(true)\n  }, [isServer, portal, setOpen, targetEl, onOpen])\n\n  const closePortal = useCallback((e: any) => {\n    if (isServer) return\n    const customEvent = createCustomEvent(e)\n    if (onClose && open.current) onClose(customEvent)\n    if (open.current) setOpen(false)\n  }, [isServer, onClose, setOpen])\n\n  const togglePortal = useCallback((e: SyntheticEvent<any, Event>): void => \n    open.current ? closePortal(e) : openPortal(e),\n    [closePortal, openPortal]\n  )\n\n  const handleKeydown = useCallback((e: KeyboardEvent): void => \n    (e.key === 'Escape' && closeOnEsc) ? closePortal(e) : undefined,\n    [closeOnEsc, closePortal]\n  )\n\n  const handleOutsideMouseClick = useCallback((e: MouseEvent): void => {\n    const containsTarget = (target: HTMLElRef) => target.current.contains(e.target as HTMLElement)\n    // There might not be a targetEl if the portal was opened programmatically.\n    if (containsTarget(portal) || (e as any).button !== 0 || !open.current || (targetEl.current && containsTarget(targetEl))) return\n    if (closeOnOutsideClick) closePortal(e)\n  }, [isServer, closePortal, closeOnOutsideClick, portal])\n\n  const handleMouseDown = useCallback((e: MouseEvent): void => {\n    if (isServer || !(portal.current instanceof HTMLElement)) return\n    const customEvent = createCustomEvent(e)\n    if (portal.current.contains(customEvent.target as HTMLElement) && onPortalClick) onPortalClick(customEvent)\n    handleOutsideMouseClick(e)\n  }, [handleOutsideMouseClick])\n\n  // used to remove the event listeners on unmount\n  const eventListeners = useRef({}) as EventListenersRef\n\n  useEffect(() => {\n    if (isServer) return\n    if (!(elToMountTo instanceof HTMLElement) || !(portal.current instanceof HTMLElement)) return\n\n    // TODO: eventually will need to figure out a better solution for this.\n    // Surely we can find a way to map onScroll/onWheel -> scroll/wheel better,\n    // but for all other event handlers. For now this works.\n    const eventHandlerMap: EventListenerMap = {\n      onScroll: 'scroll',\n      onWheel: 'wheel',\n    }\n    const node = portal.current\n    elToMountTo.appendChild(portal.current)\n    // handles all special case handlers. Currently only onScroll and onWheel\n    Object.entries(eventHandlerMap).forEach(([handlerName /* onScroll */, eventListenerName /* scroll */]) => {\n      if (!eventHandlers[handlerName as keyof EventListenerMap]) return\n      eventListeners.current[handlerName as keyof EventListenerMap] = (e: any) => (eventHandlers[handlerName as keyof EventListenerMap] as any)(createCustomEvent(e))\n      document.addEventListener(eventListenerName as keyof GlobalEventHandlersEventMap, eventListeners.current[handlerName as keyof EventListenerMap] as any)\n    })\n    document.addEventListener('keydown', handleKeydown)\n    document.addEventListener('mousedown', handleMouseDown as any)\n\n    return () => {\n      // handles all special case handlers. Currently only onScroll and onWheel\n      Object.entries(eventHandlerMap).forEach(([handlerName, eventListenerName]) => {\n        if (!eventHandlers[handlerName as keyof EventListenerMap]) return\n        document.removeEventListener(eventListenerName as keyof GlobalEventHandlersEventMap, eventListeners.current[handlerName as keyof EventListenerMap] as any)\n        delete eventListeners.current[handlerName as keyof EventListenerMap]\n      })\n      document.removeEventListener('keydown', handleKeydown)\n      document.removeEventListener('mousedown', handleMouseDown as any)\n      elToMountTo.removeChild(node)\n    }\n  }, [isServer, handleOutsideMouseClick, handleKeydown, elToMountTo, portal])\n\n  const Portal = useCallback(({ children }: { children: ReactNode }) => {\n    if (portal.current != null) return createPortal(children, portal.current)\n    return null\n  }, [portal])\n\n  return Object.assign(\n    [openPortal, closePortal, open.current, Portal, togglePortal, targetEl, portal],\n    {\n      isOpen: open.current,\n      openPortal,\n      ref: targetEl,\n      closePortal,\n      togglePortal,\n      Portal,\n      portalRef: portal,\n      ...customEventHandlers,\n      bind: { // used if you want to spread all html attributes onto the target element\n        ref: targetEl,\n        ...customEventHandlers\n      }\n    }\n  )\n}\n"],
  "mappings": "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",
  "names": ["Device", "_a"]
}
