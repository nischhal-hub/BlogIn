{
  "version": 3,
  "sources": ["../../@editorjs/raw/dist/raw.mjs"],
  "sourcesContent": ["(function(){\"use strict\";try{if(typeof document<\"u\"){var e=document.createElement(\"style\");e.appendChild(document.createTextNode(\".ce-rawtool__textarea{min-height:200px;resize:vertical;border-radius:8px;border:0;background-color:#1e2128;font-family:Menlo,Monaco,Consolas,Courier New,monospace;font-size:12px;line-height:1.6;letter-spacing:-.2px;color:#a1a7b6;overscroll-behavior:contain}\")),document.head.appendChild(e)}}catch(o){console.error(\"vite-plugin-css-injected-by-js\",o)}})();\nconst a = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16.6954 5C17.912 5 18.8468 6.07716 18.6755 7.28165L17.426 16.0659C17.3183 16.8229 16.7885 17.4522 16.061 17.6873L12.6151 18.8012C12.2152 18.9304 11.7848 18.9304 11.3849 18.8012L7.93898 17.6873C7.21148 17.4522 6.6817 16.8229 6.57403 16.0659L5.32454 7.28165C5.15322 6.07716 6.088 5 7.30461 5H16.6954Z\"/><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 8.4H9L9.42857 11.7939H14.5714L14.3571 13.2788L14.1429 14.7636L12 15.4L9.85714 14.7636L9.77143 14.3394\"/></svg>';\n/**\n * Raw HTML Tool for CodeX Editor\n *\n * @author CodeX (team@codex.so)\n * @copyright CodeX 2018\n * @license The MIT License (MIT)\n */\nclass r {\n  /**\n   * Notify core that read-only mode is supported\n   *\n   * @returns {boolean}\n   */\n  static get isReadOnlySupported() {\n    return !0;\n  }\n  /**\n   * Should this tool be displayed at the Editor's Toolbox\n   *\n   * @returns {boolean}\n   * @public\n   */\n  static get displayInToolbox() {\n    return !0;\n  }\n  /**\n   * Allow to press Enter inside the RawTool textarea\n   *\n   * @returns {boolean}\n   * @public\n   */\n  static get enableLineBreaks() {\n    return !0;\n  }\n  /**\n   * Get Tool toolbox settings\n   * icon - Tool icon's SVG\n   * title - title to show in toolbox\n   *\n   * @returns {{icon: string, title: string}}\n   */\n  static get toolbox() {\n    return {\n      icon: a,\n      title: \"Raw HTML\"\n    };\n  }\n  /**\n   * @typedef {object} RawData — plugin saved data\n   * @param {string} html - previously saved HTML code\n   * @property\n   */\n  /**\n   * Render plugin`s main Element and fill it with saved data\n   *\n   * @param {RawData} data — previously saved HTML data\n   * @param {object} config - user config for Tool\n   * @param {object} api - CodeX Editor API\n   * @param {boolean} readOnly - read-only mode flag\n   */\n  constructor({ data: t, config: e, api: s, readOnly: i }) {\n    this.api = s, this.readOnly = i, this.placeholder = e.placeholder || r.DEFAULT_PLACEHOLDER, this.CSS = {\n      baseClass: this.api.styles.block,\n      input: this.api.styles.input,\n      wrapper: \"ce-rawtool\",\n      textarea: \"ce-rawtool__textarea\"\n    }, this.data = {\n      html: t.html || \"\"\n    }, this.textarea = null, this.resizeDebounce = null;\n  }\n  /**\n   * Return Tool's view\n   *\n   * @returns {HTMLDivElement} this.element - RawTool's wrapper\n   * @public\n   */\n  render() {\n    const t = document.createElement(\"div\"), e = 100;\n    return this.textarea = document.createElement(\"textarea\"), t.classList.add(this.CSS.baseClass, this.CSS.wrapper), this.textarea.classList.add(this.CSS.textarea, this.CSS.input), this.textarea.textContent = this.data.html, this.textarea.placeholder = this.placeholder, this.readOnly ? this.textarea.disabled = !0 : this.textarea.addEventListener(\"input\", () => {\n      this.onInput();\n    }), t.appendChild(this.textarea), setTimeout(() => {\n      this.resize();\n    }, e), t;\n  }\n  /**\n   * Extract Tool's data from the view\n   *\n   * @param {HTMLDivElement} rawToolsWrapper - RawTool's wrapper, containing textarea with raw HTML code\n   * @returns {RawData} - raw HTML code\n   * @public\n   */\n  save(t) {\n    return {\n      html: t.querySelector(\"textarea\").value\n    };\n  }\n  /**\n   * Default placeholder for RawTool's textarea\n   *\n   * @public\n   * @returns {string}\n   */\n  static get DEFAULT_PLACEHOLDER() {\n    return \"Enter HTML code\";\n  }\n  /**\n   * Automatic sanitize config\n   */\n  static get sanitize() {\n    return {\n      html: !0\n      // Allow HTML tags\n    };\n  }\n  /**\n   * Textarea change event\n   *\n   * @returns {void}\n   */\n  onInput() {\n    this.resizeDebounce && clearTimeout(this.resizeDebounce), this.resizeDebounce = setTimeout(() => {\n      this.resize();\n    }, 200);\n  }\n  /**\n   * Resize textarea to fit whole height\n   *\n   * @returns {void}\n   */\n  resize() {\n    this.textarea.style.height = \"auto\", this.textarea.style.height = this.textarea.scrollHeight + \"px\";\n  }\n}\nexport {\n  r as default\n};\n"],
  "mappings": "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",
  "names": []
}
